{"version":3,"sources":["components/NotFound.jsx","components/admin/AddBurgerForm.jsx","components/admin/EditBurgerForm.jsx","sample-burgers.js","redux/commonReducer.js","sample-restaurants.js","components/admin/MenuAdminContainer.jsx","components/menu/Header.jsx","components/menu/Burger.jsx","components/menu/Menu.jsx","components/menu/MenuContainer.jsx","components/order/Shipment.jsx","components/order/Order.jsx","components/order/OrderContainer.jsx","components/App.jsx","components/Landing.jsx","components/LandingContainer.jsx","components/Router.jsx","redux/store.js","index.js"],"names":["NotFound","AddBurgerForm","createNewBurger","useState","name","setName","price","setPrice","status","setStatus","desc","setDesc","image","setImage","newBurger","className","type","placeholder","autoComplete","value","onChange","e","target","onClick","EditBurgerForm","burger","index","updateBurger","deleteBurger","burgerName","setBurgerName","burgerPrice","setBurgerPrice","burgerStatus","setBurgerStatus","burgerDescription","setBurgerDescription","burgerImage","setBurgerImage","updatedBurger","style","borderBottom","sampleBurgers","burger1","burger2","burger3","burger4","burger5","burger6","burger7","burger8","burger9","initialState","restaurants","title","url","id","currentRestaurant","burgers","order","CommonReducer","state","action","hasOwnProperty","changedOrder","item","burgersCopy","Date","now","MenuAdminContainer","Object","keys","this","props","map","key","React","Component","connect","reducer","Header","navigate","useNavigate","Burger","addToOrder","isAvailable","src","alt","disabled","Menu","MenuContainer","Shipment","total","shipping","shippingNeon","Order","deleteFromOrder","orderIds","reduce","prevTotal","count","TransitionGroup","component","CSSTransition","classNames","timeout","enter","exit","OrderContainer","App","Landing","setCurrentRestaurant","display","setDisplay","setTitle","setUrl","window","addEventListener","stopPropagation","displayList","restaurant","getTitle","goToRestaurant","LandingContainer","Router","path","element","reducers","combineReducers","commonReducer","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.36635bba.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <h2>\r\n            Упс... Эта страница не найдена\r\n        </h2>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React, {useState} from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddBurgerForm = ({createNewBurger}) => {\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState(null);\r\n    const [status, setStatus] = useState('available');\r\n    const [desc, setDesc] = useState('');\r\n    const [image, setImage] = useState('');\r\n\r\n    const newBurger = {\r\n        name,\r\n        image,\r\n        desc,\r\n        price: +price,\r\n        status,\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h3 className={'burger-add-title'}>Добавить новый бургер</h3>\r\n            <div className={'burger-edit burger-add'}>\r\n                <input type=\"text\" name={'name'} placeholder={'Name'} autoComplete={'off'}\r\n                       value={name} onChange={e => setName(e.target.value)}/>\r\n                <input type=\"text\" name={'price'} placeholder={'Price'} autoComplete={'off'}\r\n                       value={price} onChange={e => setPrice(e.target.value)}/>\r\n                <select name={'status'} className={'status'}\r\n                        value={status} onChange={e => setStatus(e.target.value)}>\r\n                    <option value=\"available\">Доступно</option>\r\n                    <option value=\"unavailable\">Убрать из меню</option>\r\n                </select>\r\n                <textarea name={'desc'} placeholder={'Description'}\r\n                          value={desc} onChange={e => setDesc(e.target.value)}/>\r\n                <input type=\"text\" name={'image'} placeholder={'Image'} autoComplete={'off'}\r\n                       value={image} onChange={e => setImage(e.target.value)}/>\r\n                <button onClick={() => createNewBurger(newBurger)}>Добавить в меню</button>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nAddBurgerForm.propTypes = {\r\n    createNewBurger: PropTypes.func,\r\n}\r\n\r\nexport default AddBurgerForm;","import React, {useState} from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst EditBurgerForm = ({burger: {image, name, price, desc, status}, index, updateBurger, deleteBurger}) => {\r\n    const [burgerName, setBurgerName] = useState(name);\r\n    const [burgerPrice, setBurgerPrice] = useState(price);\r\n    const [burgerStatus, setBurgerStatus] = useState(status);\r\n    const [burgerDescription, setBurgerDescription] = useState(desc);\r\n    const [burgerImage, setBurgerImage] = useState(image);\r\n\r\n    const updatedBurger = {\r\n        name: burgerName,\r\n        image: burgerImage,\r\n        desc: burgerDescription,\r\n        price: +burgerPrice || 0,\r\n        status: burgerStatus,\r\n    };\r\n\r\n\r\n    return (\r\n        <div className={'burger-edit'}>\r\n            <input onChange={e => setBurgerName(e.target.value)} name={'name'} type={'text'} value={burgerName}/>\r\n            <input onChange={e => setBurgerPrice(e.target.value)} name={'price'} type={'text'} value={burgerPrice}/>\r\n            <select onChange={e => setBurgerStatus(e.target.value)} name={'status'} className={'status'} value={burgerStatus}>\r\n                <option value=\"available\">\r\n                    Доступно\r\n                </option>\r\n                <option value=\"unavailable\">\r\n                    Не доступно\r\n                </option>\r\n            </select>\r\n            <textarea onChange={e => setBurgerDescription(e.target.value)} name={'desc'} value={burgerDescription}/>\r\n            <input onChange={e => setBurgerImage(e.target.value)} name={'image'} type={'text'} value={burgerImage}/>\r\n            <button\r\n                style={{borderBottom: '1px solid black'}}\r\n                onClick={() => deleteBurger(index)}\r\n            >\r\n                Удалить из меню\r\n            </button>\r\n            <button onClick={() => updateBurger(index, updatedBurger)}>\r\n                Применить изменения\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nEditBurgerForm.propTypes = {\r\n    burger: PropTypes.shape({\r\n        image: PropTypes.string,\r\n        name: PropTypes.string,\r\n        price: PropTypes.number,\r\n        desc: PropTypes.string,\r\n        status: PropTypes.string,\r\n    }),\r\n    index: PropTypes.string,\r\n    updateBurger: PropTypes.func,\r\n    deleteBurger: PropTypes.func,\r\n}\r\n\r\nexport default EditBurgerForm;","// Наше меню\nconst sampleBurgers = {\n  burger1: {\n    name: 'Чизбургер',\n    image: '/hot-burgers/images/cheese.jpg',\n    desc:\n      'Классический бургер с бифштексом из 100% говядины с маринованными огурчиками и свежей пшеничной булочкой.',\n    price: 110,\n    status: 'available'\n  },\n\n  burger2: {\n    name: 'Чикенбургер',\n    image: '/hot-burgers/images/chicken.jpg',\n    desc:\n      'Куриный бургер с добавлением расплавленного сыра, соуса Барбекю и листового салата.',\n    price: 140,\n    status: 'available'\n  },\n\n  burger3: {\n    name: 'Двойной Гамбургер',\n    image: '/hot-burgers/images/double.jpg',\n    desc:\n      'Двойной гамбургер с бифштексом из 100% говядины и расплавленным сыром Чеддер и пряным соусом.',\n    price: 200,\n    status: 'unavailable'\n  },\n\n  burger4: {\n    name: 'Фишбургер',\n    image: '/hot-burgers/images/fish.jpg',\n    desc:\n      'Рыбное филе высшего качества c листовым салатом, маринованными огурчиками и преправленное легким майонезом.',\n    price: 150,\n    status: 'available'\n  },\n\n  burger5: {\n    name: 'Картофель Фри',\n    image: '/hot-burgers/images/fries.jpg',\n    desc:\n      'Хрустящие ломтики золотистого горячего картофеля Супер Фри, сделанные из отборного органического корнеплода!',\n    price: 85,\n    status: 'available'\n  },\n\n  burger6: {\n    name: 'King Бургер',\n    image: '/hot-burgers/images/ham.jpg',\n    desc:\n      'Бургер из 100% отборной говядины, с жаренными ломтиками бекона и свежим расплавленным сыром, заправленный кетчупом и майонезом.',\n    price: 450,\n    status: 'available'\n  },\n\n  burger7: {\n    name: 'Мега Бургер',\n    image: '/hot-burgers/images/mega.jpg',\n    desc:\n      'Наш самый большой бургер, сделанный из свежайшего бифштекса, с добавлением расплавленного сыра Чеддер и соленых огурчиков.',\n    price: 500,\n    status: 'available'\n  },\n\n  burger8: {\n    name: 'Бургер в Пите',\n    image: '/hot-burgers/images/pita.jpg',\n    desc:\n      'Четыре котлеты из 100% говядины, покрытые плавленным сыром Чеддер, со свежим листовым салатом в свежей пшеничной лепешке.',\n    price: 380,\n    status: 'available'\n  },\n\n  burger9: {\n    name: 'Village Фри',\n    image: '/hot-burgers/images/bakedFries.jpg',\n    desc:\n      'Порция свежих ломтиков картофеля, запеченых на открытом воздухе под мирно тлеющими углями',\n    price: 90,\n    status: 'available'\n  }\n};\n\nexport default sampleBurgers;\n","import sampleBurgers from \"../sample-burgers\";\r\nimport sampleRestaurants from \"../sample-restaurants\";\r\n\r\nconst GO_TO_RESTAURANT = 'GO_TO_RESTAURANT';\r\nconst ADD_TO_ORDER = 'ADD_TO_ORDER';\r\nconst DELETE_FROM_ORDER = 'DELETE_FROM_ORDER';\r\nconst UPDATE_BURGER = 'UPDATE_BURGER';\r\nconst DELETE_BURGER = 'DELETE_BURGER';\r\nconst CREATE_NEW_BURGER = 'CREATE_NEW_BURGER';\r\n\r\n\r\n\r\nconst initialState = {\r\n    restaurants: sampleRestaurants,\r\n    currentRestaurant: {},\r\n    burgers: sampleBurgers,\r\n    order: {},\r\n}\r\n\r\nconst CommonReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GO_TO_RESTAURANT:\r\n            return {\r\n                ...state,\r\n                currentRestaurant: {\r\n                    title: action.title,\r\n                    url: action.url,\r\n                }\r\n            };\r\n        case ADD_TO_ORDER:\r\n            const value = state.order.hasOwnProperty(action.index) ? state.order[action.index] + 1 : 1;\r\n            return {\r\n                ...state,\r\n                order: {\r\n                    ...state.order,\r\n                    [action.index]: value,\r\n                },\r\n            };\r\n        case DELETE_FROM_ORDER:\r\n            const changedOrder = {...state.order};\r\n            delete changedOrder[action.item];\r\n            return {\r\n                ...state,\r\n                order: {...changedOrder},\r\n            };\r\n        case UPDATE_BURGER:\r\n            return {\r\n                ...state,\r\n                burgers: {\r\n                    ...sampleBurgers,\r\n                    [action.index]: action.burger,\r\n                }\r\n            };\r\n        case DELETE_BURGER:\r\n            const burgersCopy = {...sampleBurgers};\r\n            delete burgersCopy[action.index];\r\n            return {\r\n                ...state,\r\n                burgers: {\r\n                    ...burgersCopy\r\n                },\r\n            };\r\n        case CREATE_NEW_BURGER:\r\n            return {\r\n                ...state,\r\n                burgers: {\r\n                    ...sampleBurgers,\r\n                    [`burger${Date.now()}`]: action.newBurger,\r\n                },\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const setCurrentRestaurant = (title, url) => ({type: GO_TO_RESTAURANT, title, url});\r\nexport const addToOrder = index => ({type: ADD_TO_ORDER, index});\r\nexport const deleteFromOrder = item => ({type: DELETE_FROM_ORDER, item});\r\nexport const updateBurger = (index, burger) => ({type: UPDATE_BURGER, index, burger});\r\nexport const deleteBurger = index => ({type: DELETE_BURGER, index});\r\nexport const createNewBurger = newBurger => ({type: CREATE_NEW_BURGER, newBurger});\r\n\r\n\r\nexport default CommonReducer;","// Наши рестораны\nconst restaurants = [\n  {\n    title: 'Hot Burger Тверская',\n    url: 'hot-burger-tverskaya',\n    id: 1\n  },\n\n  {\n    title: 'Hot Burger Калужская',\n    url: 'hot-burger-kalujskaya',\n    id: 2\n  },\n  {\n    title: 'Hot Burger Петровка',\n    url: 'hot-burger-petrovka',\n    id: 3\n  }\n];\n\nexport default restaurants;\n","import React from 'react';\r\nimport AddBurgerForm from \"./AddBurgerForm\";\r\nimport EditBurgerForm from \"./EditBurgerForm\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {createNewBurger, deleteBurger, updateBurger} from \"../../redux/commonReducer\";\r\n\r\nclass MenuAdminContainer extends React.Component {\r\n\r\n    static propTypes = {\r\n        burgers: PropTypes.object,\r\n        deleteBurger: PropTypes.func,\r\n        updateBurger: PropTypes.func,\r\n        createNewBurger: PropTypes.func,\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={'menu-admin'}>\r\n                <h2>Управление меню</h2>\r\n                {Object.keys(this.props.burgers).map(item => {\r\n                    return <EditBurgerForm\r\n                        burger={this.props.burgers[item]}\r\n                        key={item}\r\n                        index={item}\r\n                        updateBurger={this.props.updateBurger}\r\n                        deleteBurger={this.props.deleteBurger}\r\n                    />\r\n                })}\r\n                <AddBurgerForm createNewBurger={this.props.createNewBurger}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        burgers: state.reducer.burgers,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {updateBurger, deleteBurger, createNewBurger})(MenuAdminContainer);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst Header = ({title}) => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    return (\r\n        <header className={'top'}>\r\n            <div className={'wrap'}>\r\n                <div className={'header-content'}>\r\n                    <div className={'header-rating'}>\r\n                        <div className={'header-rating_tag'}>Рейтинг</div>\r\n                        <div className={'header-rating_icon'}>★★★★★</div>\r\n                    </div>\r\n                    <div className={'header-divider'}></div>\r\n                    <h1 className={'font-effect-fire-animation'}>{title}</h1>\r\n                    <h3>\r\n                    <span>\r\n                        Быстрая доставка горячих\r\n                        <span className={'sub-header'}> #бургеров</span>\r\n                    </span>\r\n                    </h3>\r\n                    <button\r\n                        className={'header-button'}\r\n                        onClick={() => navigate('hot-burgers/')}\r\n                    >\r\n                        Покинуть ресторан\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Burger = ({burger: {image, name, price, desc, status}, index, addToOrder}) => {\r\n\r\n    const isAvailable = status === 'available';\r\n\r\n    return (\r\n        <li className={'menu-burger'}>\r\n            <div className={'image-container'}>\r\n                <img src={image} alt={name}/>\r\n            </div>\r\n            <div className={'burger-details'}>\r\n                <h3 className={'burger-name'}>\r\n                    {name}\r\n                    <span className={'price'}>\r\n                            {price} ₽\r\n                        </span>\r\n                </h3>\r\n                <p>{desc}</p>\r\n                <button\r\n                    className={'buttonOrder'}\r\n                    onClick={() => addToOrder(index)}\r\n                    disabled={!isAvailable}\r\n                >{isAvailable ? 'Заказать' : 'Временно нет'}</button>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nBurger.propTypes = {\r\n    details: PropTypes.shape({\r\n        image: PropTypes.string,\r\n        name: PropTypes.string,\r\n        price: PropTypes.number,\r\n        desc: PropTypes.string,\r\n        status: PropTypes.string,\r\n    }),\r\n    index: PropTypes.string,\r\n    addToOrder: PropTypes.func,\r\n}\r\n\r\nexport default Burger;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport Burger from \"./Burger\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Menu = ({burgers, currentRestaurant, addToOrder}) => {\r\n    return (\r\n        <div className={'menu'}>\r\n            <Header title={currentRestaurant.title}/>\r\n            <ul className={'burgers'}>\r\n                {Object.keys(burgers).map(item =>\r\n                    <Burger\r\n                        key={item}\r\n                        index={item}\r\n                        burger={burgers[item]}\r\n                        addToOrder={addToOrder}\r\n                    />\r\n                )}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nMenu.propTypes = {\r\n    burgers: PropTypes.object,\r\n    currentRestaurant: PropTypes.object,\r\n    addToOrder: PropTypes.func,\r\n};\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport Menu from \"./Menu\";\r\nimport {connect} from \"react-redux\";\r\nimport {addToOrder} from \"../../redux/commonReducer\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass MenuContainer extends Component {\r\n\r\n    static propTypes = {\r\n        burgers: PropTypes.object,\r\n        currentRestaurant: PropTypes.object,\r\n        addToOrder: PropTypes.func,\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Menu\r\n                    burgers={this.props.burgers}\r\n                    currentRestaurant={this.props.currentRestaurant}\r\n                    addToOrder={this.props.addToOrder}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        burgers: state.reducer.burgers,\r\n        currentRestaurant: state.reducer.currentRestaurant,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {addToOrder})(MenuContainer);","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Shipment = ({total}) => {\r\n\r\n    const shipping = total > 0 && total < 500 ? 350 : 99;\r\n    const shippingNeon = shipping === 99\r\n        ?\r\n        (<span className={'font-effect-neon total_wrap-cheap'}>\r\n            {shipping} ₽\r\n        </span>)\r\n        :\r\n        (<span>\r\n            {shipping} ₽\r\n        </span>)\r\n\r\n    return (\r\n        <div className={'total'}>\r\n            <div className={'total_wrap'}>\r\n                <div>\r\n                    <div>\r\n                        Доставка: {total > 0\r\n                        ? shippingNeon\r\n                        : null\r\n                    }\r\n                    </div>\r\n                    <div className={'total_wrap-free'}>\r\n                        {total < 500\r\n                            ? `Закажите ещё на ${500 - total} ₽ для доставки за 99 ₽`\r\n                            : null\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <div className={'total_wrap-final'}>\r\n                    Итого: {total} ₽\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nShipment.propTypes = {\r\n    total: PropTypes.number,\r\n}\r\n\r\nexport default Shipment;","import React from 'react';\r\nimport Shipment from \"./Shipment\";\r\nimport {CSSTransition, TransitionGroup} from \"react-transition-group\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Order = ({burgers, order, deleteFromOrder}) => {\r\n\r\n    const orderIds = Object.keys(order);\r\n    const total = orderIds.reduce((prevTotal, item) => {\r\n        const count = order[item];\r\n        if (burgers[item] && burgers[item].status === 'available') {\r\n            return prevTotal + burgers[item].price * count;\r\n        }\r\n        return prevTotal;\r\n    }, 0)\r\n\r\n    return (\r\n        <div className={'order-wrap'}>\r\n            <h2>Ваш заказ</h2>\r\n            <TransitionGroup\r\n                component={'ul'}\r\n                className={'order'}\r\n            >\r\n                {orderIds.map(item =>\r\n                    burgers[item] && burgers[item].status === 'available'\r\n                        ?\r\n                        <CSSTransition\r\n                            classNames={'order'}\r\n                            key={item}\r\n                            timeout={{enter: 500, exit: 500}}\r\n                        >\r\n                            <li key={item}>\r\n                                <span>\r\n                                    <TransitionGroup\r\n                                        component={'span'}\r\n                                        className={'count'}\r\n                                    >\r\n                                        <CSSTransition\r\n                                            classNames={'count'}\r\n                                            key={order[item]}\r\n                                            timeout={{enter: 500, exit: 500}}\r\n                                        >\r\n                                            <span>{order[item]}</span>\r\n                                        </CSSTransition>\r\n                                    </TransitionGroup>\r\n                                    шт. {burgers[item].name}\r\n                                    <span> {order[item] * burgers[item].price} ₽</span>\r\n                                    <button\r\n                                        className={'cancelItem'}\r\n                                        onClick={() => deleteFromOrder(item)}\r\n                                    >&times;</button>\r\n                                </span>\r\n                            </li>\r\n                        </CSSTransition>\r\n                        :\r\n                        burgers[item]\r\n                            ?\r\n                            <CSSTransition\r\n                                classNames={'order'}\r\n                                key={item}\r\n                                timeout={{enter: 500, exit: 500}}\r\n                            >\r\n                                <li className={'unavailable'} key={item}>\r\n                                    Извините, {burgers[item] ? burgers[item].name : 'этот бургер'} временно\r\n                                    недоступен\r\n                                </li>\r\n                            </CSSTransition>\r\n                            : null\r\n                )}\r\n            </TransitionGroup>\r\n            {total > 0\r\n                ? <Shipment total={total}/>\r\n                : <div className={'nothingSelected'}>Выберете блюдо и добавьте к заказу</div>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nOrder.propTypes = {\r\n    burgers: PropTypes.object,\r\n    order: PropTypes.object,\r\n    deleteFromOrder: PropTypes.func,\r\n}\r\n\r\nexport default Order;","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Order from \"./Order\";\r\nimport {deleteFromOrder} from \"../../redux/commonReducer\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass OrderContainer extends Component {\r\n\r\n    static propTypes = {\r\n        burgers: PropTypes.object,\r\n        order: PropTypes.object,\r\n        deleteFromOrder: PropTypes.func,\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Order\r\n                    burgers={this.props.burgers}\r\n                    order={this.props.order}\r\n                    deleteFromOrder={this.props.deleteFromOrder}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        burgers: state.reducer.burgers,\r\n        order: state.reducer.order,\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, {deleteFromOrder})(OrderContainer);","import React from 'react';\r\nimport MenuAdminContainer from \"./admin/MenuAdminContainer\";\r\nimport MenuContainer from \"./menu/MenuContainer\";\r\nimport OrderContainer from \"./order/OrderContainer\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <div className={'burger-app-wrapper'}>\r\n            <div className={'burger-paradise'}>\r\n                <MenuContainer/>\r\n                <OrderContainer/>\r\n                <MenuAdminContainer/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;","import React, {useState} from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {useNavigate} from \"react-router-dom\";\r\n\r\nconst Landing = ({restaurants, setCurrentRestaurant}) => {\r\n    const [display, setDisplay] = useState(false);\r\n    const [title, setTitle] = useState('');\r\n    const [url, setUrl] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const displayList = (e) => {\r\n        e.stopPropagation();\r\n        setDisplay(!display);\r\n    };\r\n\r\n    const getTitle = ({title, url}) => {\r\n        setDisplay(false);\r\n        setTitle(title);\r\n        setUrl(url);\r\n    };\r\n\r\n    const goToRestaurant = (title, url) => {\r\n        setCurrentRestaurant(title, url);\r\n        navigate(`/restaurant/${url}`);\r\n    };\r\n\r\n    if (display) window.addEventListener('click', () => setDisplay(false));\r\n\r\n    return (\r\n        <div className={'restaurant_select-background'}>\r\n            <div className={'restaurant_select'}>\r\n                <div className={'restaurant_select_top'}>\r\n                    <div\r\n                        className={'restaurant_select_top-header font-effect-outline'}\r\n                        onClick={(e) => displayList(e)}\r\n                    >\r\n                        {title\r\n                            ? title\r\n                            : 'Выбери ресторан'\r\n                        }\r\n                    </div>\r\n                </div>\r\n                {display\r\n                    ?\r\n                    <div\r\n                        className={'restaurant_select_bottom'}\r\n                        onClick={e => e.stopPropagation()}\r\n                    >\r\n                        <ul>\r\n                            {restaurants.map(restaurant =>\r\n                                <li key={restaurant.id}>\r\n                                <span onClick={() => getTitle(restaurant)}>\r\n                                    {restaurant.title}\r\n                                </span>\r\n                                </li>)\r\n                            }\r\n                        </ul>\r\n                    </div>\r\n                    :\r\n                    null\r\n                }\r\n                {title && !display\r\n                    ? <button onClick={() => goToRestaurant(title, url)}>Перейти в ресторан</button>\r\n                    : null\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nLanding.propTypes = {\r\n    restaurants: PropTypes.array,\r\n    setCurrentRestaurant: PropTypes.func,\r\n};\r\n\r\nexport default Landing;","import React, {Component} from 'react';\r\nimport Landing from \"./Landing\";\r\nimport {connect} from \"react-redux\";\r\nimport {setCurrentRestaurant} from \"../redux/commonReducer\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass LandingContainer extends Component {\r\n\r\n    static propTypes = {\r\n        restaurants: PropTypes.object,\r\n        setCurrentRestaurant: PropTypes.func,\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Landing\r\n                    restaurants={this.props.restaurants}\r\n                    setCurrentRestaurant={this.props.setCurrentRestaurant}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        restaurants: state.reducer.restaurants\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {setCurrentRestaurant})(LandingContainer);","import React from 'react';\r\nimport {BrowserRouter, Route, Routes} from \"react-router-dom\";\r\nimport NotFound from \"./NotFound\";\r\nimport App from \"./App\";\r\nimport LandingContainer from \"./LandingContainer\";\r\n\r\nconst Router = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Routes>\r\n                <Route path={'hot-burgers/'} element={<LandingContainer/>}/>\r\n                <Route path={'restaurant/:restaurantId'} element={<App/>}/>\r\n                <Route path={'*'} element={<NotFound/>}/>\r\n            </Routes>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default Router;","import {combineReducers, createStore} from \"redux\";\r\nimport commonReducer from \"./commonReducer\";\r\n\r\n\r\nconst reducers = combineReducers({\r\n    reducer: commonReducer,\r\n});\r\n\r\nexport const store = createStore(reducers);","import React from 'react';\nimport ReactDOM from \"react-dom\";\nimport './css/style.css';\nimport Router from \"./components/Router\";\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/store\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <Router/>\n    </Provider>,\n    document.getElementById('root'));\n\n"],"sourceRoot":""}